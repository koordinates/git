#!/bin/sh

if [ $# -gt 0 ]; then

	# ARGS has one argument per line
	ARGS=$(echo "$@" | xargs printf '%s\n')

	# Every argument should be path to a filter extension library.
	INVALID_ARGS=$(echo "$ARGS" | grep -v '\.a$')
	if [ -n "$INVALID_ARGS" ] ; then
		printf "Error: all arguments must be paths to .a files: \n%s\n" \
			"${INVALID_ARGS}" >&2
		exit 1
	fi

	# qux/foo.a -> foo
	NAMES=$(echo "$ARGS" | sed -e 's!.*/!!' -e 's!.a$!!')

	# Filter extension names must be valid C symbols so they can be linked by name.
	INVALID_NAMES=$(echo "$NAMES" | grep -v '^[A-Za-z0-9_]\+$')
	if [ -n "$INVALID_NAMES" ] ; then
		printf "Error: all library names must also be valid C symbols: \n%s\n" \
			"${INVALID_NAMES}" >&2
		exit 1
	fi

	# foo -> filter_extension_foo
	EXTS=$(echo "$NAMES" | sed -e 's!^!filter_extension_!')

	# filter_extension_foo -> [\t]filter_extension_foo,
	DECLARATIONS=$(echo "$EXTS" | sed -e 's!^!\t!' -e 's!$!,!')

	# filter_extension_foo -> [\t]&filter_extension_foo,
	ARRAY=$(echo "$EXTS" | sed -e 's!^!\t\&!' -e 's!$!,!')
fi

echo '/* Automatically generated by generate-list-objects-filter-extensions.sh */'
echo
echo '#include "git-compat-util.h"'
echo '#include "list-objects-filter-extensions.h"'
echo

if [ $# -gt 0 ]; then
	echo 'extern const struct filter_extension'
	echo "${DECLARATIONS%?}"
	echo ';'
	echo
fi

echo 'const struct filter_extension *filter_extensions[] = {'
echo "${ARRAY}"
echo '	NULL,'
echo '};'